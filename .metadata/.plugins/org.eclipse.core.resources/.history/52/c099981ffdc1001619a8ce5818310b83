package com.mygdx.game;

import com.badlogic.gdx.Gdx;
import com.badlogic.gdx.audio.Sound;
import com.badlogic.gdx.math.Vector2;

public class Score {
	private ScoreUI scoreui;
	private SongGenerater songGenerater;
	private GradeDecision decision;
	private NoteDisplay noteDisp;
	private Controller controller;

	private int elapsedFrame = 0;
	private int hp;
	Sound sound;

	//タッチ関係
	private float touchTime = 0;

	public Score(){
		scoreui = new ScoreUI(0, 320, 800, 160);
		noteDisp = new NoteDisplay();
		songGenerater = new SongGenerater(0);
		decision = new GradeDecision(this);
		controller = new Controller(this);

		sound = Gdx.audio.newSound(Gdx.files.internal("斬撃音.wav"));
		hp = 100;
	}

	public void update(float delta){
		touchTime += delta;
		elapsedFrame++;

		createNote();

		//GAMEOVER処理　エフェクトの追加　UIの調整　各種スクリーンとの連結部分

		// スコアの状態の更新
		if(!noteDisp.isEmpty()){
			noteDisp.move();
			if(noteDisp.getLatestNote().getPosition().x <= 0){
				noteDisp.removeNote(0);
				decision.increaseMissNum();
				decreaseHp();
			}
		}

		controller.touched();

		//終了処理
		if(songGenerater.isEmpty()){

		}

		if(hp <= 0){

		}
	}

	private void createNote(){
		if(!songGenerater.isEmpty()){
			if(elapsedFrame >= songGenerater.getLateNote()){
				elapsedFrame = 0;
				songGenerater.removeNote(0);
				noteDisp.addNote(new Vector2(800, scoreui.getCenterY()));
			}
		}
	}

	public int getHp(){
		return this.hp;
	}

	public NoteDisplay getNoteDisp(){
		return noteDisp;
	}

	public String getDicisionStr(){
		return decision.getString();
	}

	public float getTouchTime(){
		return touchTime;
	}


	public ScoreUI getScoreUI(){
		return scoreui;
	}

	public GradeDecision getDecision() {
		return decision;
	}

	public void setTouchTime(int time) {
		touchTime = time;
	}

	public void decreaseHp() {
		hp -= 10;
	}
}
